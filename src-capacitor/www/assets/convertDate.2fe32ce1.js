var locale = new Date().getTimezoneOffset() / -60;
function convertDateToJSON(dateT) {
  if (dateT == null || dateT == "")
    return null;
  const [date, time] = dateT.split(" ");
  const [year, month, day] = date.split("-");
  const [hours, minutes] = time.split(":");
  const dateObject = new Date(
    Date.UTC(year, month - 1, day, hours - 2, minutes)
  );
  const converted = dateObject.toISOString();
  return converted;
}
function convertJSONToDate(dateT) {
  if (dateT == null || dateT == "")
    return null;
  const dateObject = new Date(dateT);
  dateObject.setUTCHours(dateObject.getUTCHours() + locale);
  const year = dateObject.getUTCFullYear();
  const month = ("0" + (dateObject.getUTCMonth() + 1)).slice(-2);
  const day = ("0" + dateObject.getUTCDate()).slice(-2);
  const hours = ("0" + dateObject.getUTCHours()).slice(-2);
  const minutes = ("0" + dateObject.getUTCMinutes()).slice(-2);
  const converted = `${year}-${month}-${day} ${hours}:${minutes}`;
  return converted;
}
function convertJSONToMinimumDate(dateT) {
  const dateObject = new Date(dateT);
  const year = dateObject.getUTCFullYear();
  const month = ("0" + (dateObject.getUTCMonth() + 1)).slice(-2);
  const day = ("0" + (dateObject.getUTCDate() - 1)).slice(-2);
  ("0" + dateObject.getUTCHours()).slice(-2);
  ("0" + dateObject.getUTCMinutes()).slice(-2);
  const converted = `${year}/${month}/${day}`;
  return converted;
}
function getTimePlusFifteenMinutes(dateTimeString) {
  let date = dateAdd(new Date(dateTimeString), "minute", 15);
  return date.toISOString();
}
function dateAdd(date, interval, units) {
  if (!(date instanceof Date))
    return void 0;
  var ret = new Date(date);
  var checkRollover = function() {
    if (ret.getDate() != date.getDate())
      ret.setDate(0);
  };
  switch (String(interval).toLowerCase()) {
    case "year":
      ret.setFullYear(ret.getFullYear() + units);
      checkRollover();
      break;
    case "quarter":
      ret.setMonth(ret.getMonth() + 3 * units);
      checkRollover();
      break;
    case "month":
      ret.setMonth(ret.getMonth() + units);
      checkRollover();
      break;
    case "week":
      ret.setDate(ret.getDate() + 7 * units);
      break;
    case "day":
      ret.setDate(ret.getDate() + units);
      break;
    case "hour":
      ret.setTime(ret.getTime() + units * 36e5);
      break;
    case "minute":
      ret.setTime(ret.getTime() + units * 6e4);
      break;
    case "second":
      ret.setTime(ret.getTime() + units * 1e3);
      break;
    default:
      ret = void 0;
      break;
  }
  return ret;
}
function setCurrentTime(dateISOString) {
  let date = new Date(dateISOString);
  date.setTime(new Date().getTime());
  return date.toISOString();
}
export { convertJSONToMinimumDate as a, convertDateToJSON as b, convertJSONToDate as c, getTimePlusFifteenMinutes as g, setCurrentTime as s };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udmVydERhdGUuMmZlMzJjZTEuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb252ZXJ0RGF0ZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbG9jYWxlID0gbmV3IERhdGUoKS5nZXRUaW1lem9uZU9mZnNldCgpIC8gLTYwO1xyXG4vL2xvY2FsZSA9IDI7XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gY29udmVydERhdGVUb0pTT04oZGF0ZVQpIHtcclxuICAvLyDRltC3INGE0YDQvtC90YLQtdC90LTQsCDQutC+0L3QstC10YDRgtCw0YbRltGPINC00LvRjyDQsdC10LrQtdC90LTQsFxyXG4gIGlmIChkYXRlVCA9PSBudWxsIHx8IGRhdGVUID09IFwiXCIpIHJldHVybiBudWxsO1xyXG4gIGNvbnN0IFtkYXRlLCB0aW1lXSA9IGRhdGVULnNwbGl0KFwiIFwiKTtcclxuICBjb25zdCBbeWVhciwgbW9udGgsIGRheV0gPSBkYXRlLnNwbGl0KFwiLVwiKTtcclxuICBjb25zdCBbaG91cnMsIG1pbnV0ZXNdID0gdGltZS5zcGxpdChcIjpcIik7XHJcbiAgY29uc3QgZGF0ZU9iamVjdCA9IG5ldyBEYXRlKFxyXG4gICAgRGF0ZS5VVEMoeWVhciwgbW9udGggLSAxLCBkYXksIGhvdXJzIC0gMiwgbWludXRlcylcclxuICApO1xyXG5cclxuICBjb25zdCBjb252ZXJ0ZWQgPSBkYXRlT2JqZWN0LnRvSVNPU3RyaW5nKCk7XHJcbiAgcmV0dXJuIGNvbnZlcnRlZDtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGNvbnZlcnRKU09OVG9EYXRlKGRhdGVUKSB7XHJcbiAgLy8g0JjQtyDQsdC10LrQtdC90LTQsCDQutC+0L3QstC10YDRgtCw0YbQuNGPINC00LvRjyDRhNGA0L7QvdGC0LXQvdC00LBcclxuICBpZiAoZGF0ZVQgPT0gbnVsbCB8fCBkYXRlVCA9PSBcIlwiKSByZXR1cm4gbnVsbDtcclxuXHJcbiAgY29uc3QgZGF0ZU9iamVjdCA9IG5ldyBEYXRlKGRhdGVUKTtcclxuXHJcbiAgZGF0ZU9iamVjdC5zZXRVVENIb3VycyhkYXRlT2JqZWN0LmdldFVUQ0hvdXJzKCkgKyBsb2NhbGUpO1xyXG5cclxuICBjb25zdCB5ZWFyID0gZGF0ZU9iamVjdC5nZXRVVENGdWxsWWVhcigpO1xyXG4gIGNvbnN0IG1vbnRoID0gKFwiMFwiICsgKGRhdGVPYmplY3QuZ2V0VVRDTW9udGgoKSArIDEpKS5zbGljZSgtMik7XHJcbiAgY29uc3QgZGF5ID0gKFwiMFwiICsgZGF0ZU9iamVjdC5nZXRVVENEYXRlKCkpLnNsaWNlKC0yKTtcclxuICBjb25zdCBob3VycyA9IChcIjBcIiArIGRhdGVPYmplY3QuZ2V0VVRDSG91cnMoKSkuc2xpY2UoLTIpO1xyXG4gIGNvbnN0IG1pbnV0ZXMgPSAoXCIwXCIgKyBkYXRlT2JqZWN0LmdldFVUQ01pbnV0ZXMoKSkuc2xpY2UoLTIpO1xyXG5cclxuICBjb25zdCBjb252ZXJ0ZWQgPSBgJHt5ZWFyfS0ke21vbnRofS0ke2RheX0gJHtob3Vyc306JHttaW51dGVzfWA7XHJcblxyXG4gIHJldHVybiBjb252ZXJ0ZWQ7XHJcbn1cclxuXHJcbi8vY29udmVydHMgYmFja2VuZCBkYXRlIHRvIHllYXIvbW9udGgvZGF5XHJcbmV4cG9ydCBmdW5jdGlvbiBjb252ZXJ0SlNPTlRvTWluaW11bURhdGUoZGF0ZVQpIHtcclxuICBjb25zdCBkYXRlT2JqZWN0ID0gbmV3IERhdGUoZGF0ZVQpO1xyXG4gIGNvbnN0IHllYXIgPSBkYXRlT2JqZWN0LmdldFVUQ0Z1bGxZZWFyKCk7XHJcbiAgY29uc3QgbW9udGggPSAoXCIwXCIgKyAoZGF0ZU9iamVjdC5nZXRVVENNb250aCgpICsgMSkpLnNsaWNlKC0yKTtcclxuICBjb25zdCBkYXkgPSAoXCIwXCIgKyAoZGF0ZU9iamVjdC5nZXRVVENEYXRlKCkgLSAxKSkuc2xpY2UoLTIpO1xyXG4gIGNvbnN0IGhvdXJzID0gKFwiMFwiICsgZGF0ZU9iamVjdC5nZXRVVENIb3VycygpKS5zbGljZSgtMik7XHJcbiAgY29uc3QgbWludXRlcyA9IChcIjBcIiArIGRhdGVPYmplY3QuZ2V0VVRDTWludXRlcygpKS5zbGljZSgtMik7XHJcbiAgY29uc3QgY29udmVydGVkID0gYCR7eWVhcn0vJHttb250aH0vJHtkYXl9YDtcclxuICByZXR1cm4gY29udmVydGVkO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZ2V0VGltZVBsdXNGaWZ0ZWVuTWludXRlcyhkYXRlVGltZVN0cmluZykge1xyXG4gIGxldCBkYXRlID0gZGF0ZUFkZChuZXcgRGF0ZShkYXRlVGltZVN0cmluZyksIFwibWludXRlXCIsIDE1KTtcclxuICByZXR1cm4gZGF0ZS50b0lTT1N0cmluZygpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBkYXRlQWRkKGRhdGUsIGludGVydmFsLCB1bml0cykge1xyXG4gIGlmICghKGRhdGUgaW5zdGFuY2VvZiBEYXRlKSkgcmV0dXJuIHVuZGVmaW5lZDtcclxuICB2YXIgcmV0ID0gbmV3IERhdGUoZGF0ZSk7IC8vZG9uJ3QgY2hhbmdlIG9yaWdpbmFsIGRhdGVcclxuICB2YXIgY2hlY2tSb2xsb3ZlciA9IGZ1bmN0aW9uICgpIHtcclxuICAgIGlmIChyZXQuZ2V0RGF0ZSgpICE9IGRhdGUuZ2V0RGF0ZSgpKSByZXQuc2V0RGF0ZSgwKTtcclxuICB9O1xyXG4gIHN3aXRjaCAoU3RyaW5nKGludGVydmFsKS50b0xvd2VyQ2FzZSgpKSB7XHJcbiAgICBjYXNlIFwieWVhclwiOlxyXG4gICAgICByZXQuc2V0RnVsbFllYXIocmV0LmdldEZ1bGxZZWFyKCkgKyB1bml0cyk7XHJcbiAgICAgIGNoZWNrUm9sbG92ZXIoKTtcclxuICAgICAgYnJlYWs7XHJcbiAgICBjYXNlIFwicXVhcnRlclwiOlxyXG4gICAgICByZXQuc2V0TW9udGgocmV0LmdldE1vbnRoKCkgKyAzICogdW5pdHMpO1xyXG4gICAgICBjaGVja1JvbGxvdmVyKCk7XHJcbiAgICAgIGJyZWFrO1xyXG4gICAgY2FzZSBcIm1vbnRoXCI6XHJcbiAgICAgIHJldC5zZXRNb250aChyZXQuZ2V0TW9udGgoKSArIHVuaXRzKTtcclxuICAgICAgY2hlY2tSb2xsb3ZlcigpO1xyXG4gICAgICBicmVhaztcclxuICAgIGNhc2UgXCJ3ZWVrXCI6XHJcbiAgICAgIHJldC5zZXREYXRlKHJldC5nZXREYXRlKCkgKyA3ICogdW5pdHMpO1xyXG4gICAgICBicmVhaztcclxuICAgIGNhc2UgXCJkYXlcIjpcclxuICAgICAgcmV0LnNldERhdGUocmV0LmdldERhdGUoKSArIHVuaXRzKTtcclxuICAgICAgYnJlYWs7XHJcbiAgICBjYXNlIFwiaG91clwiOlxyXG4gICAgICByZXQuc2V0VGltZShyZXQuZ2V0VGltZSgpICsgdW5pdHMgKiAzNjAwMDAwKTtcclxuICAgICAgYnJlYWs7XHJcbiAgICBjYXNlIFwibWludXRlXCI6XHJcbiAgICAgIHJldC5zZXRUaW1lKHJldC5nZXRUaW1lKCkgKyB1bml0cyAqIDYwMDAwKTtcclxuICAgICAgYnJlYWs7XHJcbiAgICBjYXNlIFwic2Vjb25kXCI6XHJcbiAgICAgIHJldC5zZXRUaW1lKHJldC5nZXRUaW1lKCkgKyB1bml0cyAqIDEwMDApO1xyXG4gICAgICBicmVhaztcclxuICAgIGRlZmF1bHQ6XHJcbiAgICAgIHJldCA9IHVuZGVmaW5lZDtcclxuICAgICAgYnJlYWs7XHJcbiAgfVxyXG4gIHJldHVybiByZXQ7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBzZXRDdXJyZW50VGltZShkYXRlSVNPU3RyaW5nKSB7XHJcbiAgbGV0IGRhdGUgPSBuZXcgRGF0ZShkYXRlSVNPU3RyaW5nKTtcclxuICBkYXRlLnNldFRpbWUobmV3IERhdGUoKS5nZXRUaW1lKCkpO1xyXG4gIHJldHVybiBkYXRlLnRvSVNPU3RyaW5nKCk7XHJcbn1cclxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLElBQUksU0FBUyxJQUFJLEtBQUksRUFBRyxrQkFBbUIsSUFBRztBQUd2QyxTQUFTLGtCQUFrQixPQUFPO0FBRXZDLE1BQUksU0FBUyxRQUFRLFNB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
